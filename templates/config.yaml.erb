apiVersion: kubeadm.k8s.io/v1alpha2
kind: MasterConfiguration
api:
  advertiseAddress: <%= @kube_api_advertise_address %>
  bindPort: 6443
  controlPlaneEndpoint: ""
etcd:
  external:
    endpoints:
    <% @etcd_peers.each do |peer| %>
    - https://<%= peer %>:2379
    <% end -%>
    caFile: /etc/kubernetes/pki/etcd/ca.crt
    certFile: /etc/kubernetes/pki/etcd/client.crt
    keyFile: /etc/kubernetes/pki/etcd/client.key
CertificatesDir: /etc/kubernetes/pki
networking:
  serviceSubnet: "<%= @service_cidr %>"
controllerManagerExtraArgs:
  address: "<%= @controller_manager_address %>"
  allocate-node-cidrs: "<%= @cni_pod_cidr_allocate %>"
  cluster-cidr: "<%= @cni_pod_cidr %>"
  node-cidr-mask-size: "<%= @cni_pod_cidr_mask %>"
  service-cluster-ip-range: "<%= @service_cidr %>"
schedulerExtraArgs:
  address: "<%= @scheduler_address %>"
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: <%= @token %>
  ttl: 0s
  usages:
  - signing
  - authentication
apiServerExtraArgs:
  endpoint-reconciler-type: lease
<% @apiserver_extra_arguments.each do |arg| -%>
  <%= arg %>
<% end -%>
<%- if @apiserver_cert_extra_sans -%>
apiServerCertSANs:
<% @apiserver_cert_extra_sans.each do |san| -%>
  - <%= san %>
<% end -%>
<% end -%>
<%- if @feature_gates -%>
featureGates:
<% @feature_gates.each do |feature, value| -%>
  <%= feature %>: <%= value %>
<% end -%>
<% end -%>
<%- if @kube_proxy -%>
kubeProxy:
  config:
<% @kube_proxy.each do |param, value| -%>
    <%= param %>: <%= value %>
<% end -%>
<% end -%>
